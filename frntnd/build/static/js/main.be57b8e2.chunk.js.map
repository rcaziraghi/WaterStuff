{"version":3,"sources":["services/auth.service.js","components/Login.js","actions/auth.js","actions/tipo.js","components/Registrar.js","services/auth-header.js","services/usuario.service.js","components/Home.js","components/Perfil.js","components/telas/TelaUsuario.js","components/telas/TelaMod.js","components/telas/TelaAdmin.js","components/RecuperarSenha.js","services/instalacao.service.js","components/instalacoes/CadastrarInstalacao.js","actions/instalacao.js","components/instalacoes/ListarInstalacao.js","services/fatura.service.js","components/faturas/ListarFatura.js","components/avaliacoes/AvaliacaoModal.js","services/avaliacao.service.js","components/avaliacoes/ListarAvaliacao.js","components/avaliacoes/CriarAvaliacao.js","actions/avaliacao.js","helpers/historico.js","reducers/auth.js","reducers/mensagem.js","reducers/index.js","App.js","actions/mensagem.js","serviceWorker.js","index.js"],"names":["API_URL","process","dados","console","log","axios","post","email","nomeCompleto","senha","dtNascimento","cidade","siglaEstado","estado","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","parse","getItem","Login","props","useState","setEmail","setSenha","loading","setLoading","mensagemEmail","setMensagemEmail","mensagemSenha","setMensagemSenha","estaLogado","useSelector","state","auth","mensagem","dispatch","useDispatch","to","className","src","alt","onSubmit","e","preventDefault","AuthService","type","payload","usuario","Promise","resolve","error","message","toString","reject","login","history","push","window","location","reload","catch","htmlFor","name","value","onChange","target","isEmail","aoMudarEmail","role","length","aoMudarSenha","disabled","registerLocale","pt","validarRequerido","Registrar","aoMudarConcordo","Estado","concordo","checked","setState","handleModData","aoMudarInput","nomeCampo","valorCampo","erro","verificarCampos","handleRegistrar","mensagemErro","confSenha","Object","entries","key","validarFormulario","resMessage","forEach","entrada","carregando","Date","moment","subtract","ufs","label","bind","aoMudarEstado","this","validarTamanhoSenha","noValidate","dateFormat","selected","locale","date","id","options","map","Component","authHeader","get","headers","Home","conteudo","setConteudo","useEffect","servicoUsuario","_content","Perfil","usuarioAtual","cargos","cargo","index","TelaUsuario","selecao","setSelecao","liberado","setLiberado","resposta","data-toggle","onClick","aria-controls","aria-labelledby","TelaMod","TelaAdmin","RecuperarSenha","valor","Erro","handleRecuperarSenha","ehValido","values","val","sucesso","require","config","codConsumidor","cpf","CadastrarInstalacao","setCpf","setCodConsumidor","tipoMensagem","setTipoMensagem","mensagemCpf","setMensagemCpf","mensagemCodConsumidor","setMensagemCodConsumidor","InstalacaoService","cadastrar","replace","add","i","parseInt","charAt","rev","validarCPF","listarInstalacao","instalacoes","listaItens","instalacao","createdAt","format","updatedAt","listarFatura","filtro","listaFiltrada","faturas","filter","fatura","indexOf","faturasFiltradas","FaturaService","instalacaoId","numFatura","ano","mes","situacao","placeholder","AvaliacaoModal","fechar","fecharModal","show","Modal","onHide","ref","animation","Header","closeButton","Title","avaliacao","titulo","Badge","variant","nota","Body","atendimento","observacoes","Footer","fromNow","Button","listarAvaliacao","objectFindByKey","array","abrirModal","avaliacaoSelecionada","avaliacoes","avaliacaoModal","modalAberto","wrapper","React","createRef","AvaliacaoService","cards","Card","Text","Link","CardColumns","CriarAvaliacao","setTitulo","setNota","setAtendimento","setObservacoes","mensagemTitulo","setMensagemTitulo","mensagemNota","setMensagemNota","mensagemAtendimento","setMensagemAtendimento","mensagemBackend","setMensagemBackend","tipoMensagemBackend","setTipoMensagemBackend","rangeAvaliacoes","validarPreenchido","validarIsNaN","isNaN","criar","tituloInserido","notaSelecionada","defaultValue","atendimentoInserido","observacoesInseridas","historico","createBrowserHistory","initialState","combineReducers","action","App","mostrarTelaMod","setMostrarTelaMod","mostrarTelaAdmin","setMostrarTelaAdmin","listen","includes","href","exact","path","component","ListarInstalacao","ListarFatura","ListarAvaliacao","AppWrapper","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.be57b8e2.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL_AUTH;\r\n\r\nconst registrar = (dados) => {\r\n  console.log(\"chegou registrar\");\r\n  console.log(dados);\r\n  return axios.post(API_URL + \"registrar\", {\r\n    email: dados.email,\r\n    nomeCompleto: dados.nomeCompleto,\r\n    senha: dados.senha,\r\n    dtNascimento: dados.dtNascimento,\r\n    cidade: dados.cidade,\r\n    siglaEstado: dados.estado\r\n  });\r\n};\r\n\r\nconst login = (email, senha) => {\r\n  console.log(\"env\", API_URL);\r\n  return axios\r\n    .post(API_URL + \"login\", {\r\n      email,\r\n      senha,\r\n    })\r\n    .then((response) => {\r\n      if (response.data.accessToken) {\r\n        localStorage.setItem(\"usuario\", JSON.stringify(response.data));\r\n      }\r\n\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"usuario\");\r\n};\r\n\r\nconst recuperarSenha = (email) => {\r\n  console.log(\"chegou registrar\");\r\n  console.log(email);\r\n  return axios.post(API_URL + \"recuperar/senha\", {\r\n    email\r\n  }).then((response) => {\r\n    return response.data;\r\n  });\r\n};\r\n\r\nconst usuarioLogado = () => {\r\n  return JSON.parse(localStorage.getItem('usuario'));\r\n}\r\n\r\nexport default {\r\n  registrar,\r\n  login,\r\n  logout,\r\n  recuperarSenha,\r\n  usuarioLogado\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n\r\nimport { isEmail } from \"validator\";\r\nimport { login } from \"../actions/auth\";\r\n\r\n// pagina login\r\nconst Login = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [senha, setSenha] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [mensagemEmail, setMensagemEmail] = useState(\"\");\r\n  const [mensagemSenha, setMensagemSenha] = useState(\"\");\r\n\r\n  const { estaLogado } = useSelector((state) => state.auth);\r\n  const { mensagem } = useSelector((state) => state.mensagem);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const aoMudarEmail = (e) => {\r\n    const email = e.target.value;\r\n\r\n    if (!email) {\r\n      setMensagemEmail(\"Este campo é requerido!\");\r\n    } else if (!isEmail(email)) {\r\n      setMensagemEmail(\"Este não é um email válido.\");\r\n    } else {\r\n      setMensagemEmail(\"\");\r\n    }\r\n\r\n    setEmail(email);\r\n  };\r\n\r\n  const aoMudarSenha = (e) => {\r\n    const senha = e.target.value;\r\n\r\n    if (!senha) {\r\n      setMensagemSenha(\"Este campo é requerido!\");\r\n    } else if (senha.length < 7) {\r\n      setMensagemSenha(\"É necessário 6 dígitos ao menos na senha!\");\r\n    } else {\r\n      setMensagemSenha(\"\");\r\n    }\r\n\r\n    setSenha(senha);\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    // Evita comportamento default do navegador\r\n    // ex. refresh/reload  por causa do submit do formulário\r\n    e.preventDefault();\r\n\r\n    setLoading(true);\r\n\r\n    // form.current.validateAll();\r\n\r\n    if (!mensagemEmail && !mensagemSenha) {\r\n      dispatch(login(email, senha))\r\n        .then(() => {\r\n          console.log(\"Sucesso login!\");\r\n          props.history.push(\"/perfil\");\r\n          window.location.reload();\r\n        })\r\n        .catch(() => {\r\n          console.log(\"Erro login!\", mensagem, estaLogado);\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      console.log(\"Erro tela login!\");\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (estaLogado) {\r\n    console.log(\"Esta logado!\");\r\n    return <Redirect to=\"/perfil\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-md-12\">\r\n      <div className=\"card card-container\">\r\n        <img\r\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n          alt=\"profile-img\"\r\n          className=\"profile-img-card\"\r\n        />\r\n\r\n        <form onSubmit={handleLogin}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={(e) => aoMudarEmail(e)}\r\n              // validations={[validarRequerido, validarEmail]}\r\n            />\r\n          </div>\r\n          {mensagemEmail && (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n              {mensagemEmail}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"senha\">Senha</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              name=\"senha\"\r\n              value={senha}\r\n              onChange={(e) => aoMudarSenha(e)}\r\n              // validations={[validarRequerido]}\r\n            />\r\n          </div>\r\n          {mensagemSenha && (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n              {mensagemSenha}\r\n            </div>\r\n          )}\r\n\r\n          <Link to={\"/recuperar/senha\"} className=\"form-group\">\r\n            Esqueceu sua senha?\r\n          </Link>\r\n\r\n          <div className=\"form-group\">\r\n            <button className=\"btn btn-primary btn-block\" disabled={loading}>\r\n              {loading && (\r\n                <span className=\"spinner-border spinner-border-sm\"></span>\r\n              )}\r\n              <span>Login</span>\r\n            </button>\r\n          </div>\r\n\r\n          {mensagem && (\r\n            <div className=\"form-group\">\r\n              <div className=\"alert alert-danger\" role=\"alert\">\r\n                {mensagem}\r\n              </div>\r\n            </div>\r\n          )}\r\n          {/* <button style={{ display: \"none\" }} ref={checkBtn} /> */}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","// Criador das ações relacionadas a autenticação\r\n\r\nimport {\r\n    SUCESSO_REGISTRO,\r\n    FALHA_REGISTRO,\r\n    SUCESSO_LOGIN,\r\n    FALHA_LOGIN,\r\n    LOGOUT,\r\n    SETAR_MENSAGEM,\r\n    SENHA_RECUPERADA\r\n  } from \"./tipo\";\r\n  \r\n  import AuthService from \"../services/auth.service\";\r\n  \r\n  export const registrar = (email, senha) => (dispatch) => {\r\n    return AuthService.registrar(email, senha).then(\r\n      (resposta) => {\r\n        dispatch({\r\n            type: SUCESSO_REGISTRO,\r\n        });\r\n  \r\n        dispatch({\r\n          type: SETAR_MENSAGEM,\r\n          payload: resposta.data.mensagem,\r\n        });\r\n  \r\n        return Promise.resolve();\r\n      },\r\n      (error) => {\r\n        const mensagem =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n  \r\n        dispatch({\r\n            type: FALHA_REGISTRO,\r\n        });\r\n  \r\n        dispatch({\r\n            type: SETAR_MENSAGEM,\r\n          payload: mensagem,\r\n        });\r\n  \r\n        return Promise.reject();\r\n      }\r\n    );\r\n  };\r\n  \r\n  export const login = (email, senha) => (dispatch) => {\r\n    return AuthService.login(email, senha).then(\r\n      (data) => {\r\n        dispatch({\r\n          type: SUCESSO_LOGIN,\r\n          payload: { usuario: data },\r\n        });\r\n  \r\n        return Promise.resolve();\r\n      },\r\n      (error) => {\r\n        const mensagem =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n        \r\n          console.log('Erro:',mensagem);\r\n\r\n        dispatch({\r\n            type: FALHA_LOGIN,\r\n        });\r\n  \r\n        dispatch({\r\n            type: SETAR_MENSAGEM,\r\n            payload: mensagem,\r\n        });\r\n  \r\n        return Promise.reject();\r\n      }\r\n    );\r\n  };\r\n  \r\n  export const logout = () => (dispatch) => {\r\n    AuthService.logout();\r\n  \r\n    dispatch({\r\n        type: LOGOUT,\r\n    });\r\n  };\r\n\r\n  export const recuperarSenha = (email) => (dispatch) => {\r\n    return AuthService.login(email).then(\r\n      (data) => {\r\n        dispatch({\r\n          type: SENHA_RECUPERADA,\r\n          payload: data,\r\n        });\r\n  \r\n        return Promise.resolve();\r\n      },\r\n      (error) => {\r\n        const mensagem =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n        \r\n          console.log('Erro:',mensagem);\r\n  \r\n        dispatch({\r\n            type: SETAR_MENSAGEM,\r\n            payload: mensagem,\r\n        });\r\n  \r\n        return Promise.reject();\r\n      }\r\n    );\r\n  };\r\n  ","// Tipos de ações\r\nexport const SUCESSO_REGISTRO = \"SUCESSO_REGISTRO\";\r\nexport const FALHA_REGISTRO = \"FALHA_REGISTRO\";\r\nexport const SUCESSO_LOGIN = \"SUCESSO_LOGIN\";\r\nexport const FALHA_LOGIN = \"FALHA_LOGIN\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const EMAIL_NAO_EXISTE = \"EMAIL_NAO_EXISTE\";\r\n\r\nexport const SETAR_MENSAGEM = \"SETAR_MENSAGEM\";\r\nexport const LIMPAR_MENSAGEM = \"LIMPAR_MENSAGEM\";\r\n\r\nexport const SENHA_RECUPERADA = \"SENHA_RECUPERADA\";\r\n\r\nexport const INSTALACAO_CADASTRADA = \"INSTALACAO_CADASTRADA\";\r\n","import React, { Component } from \"react\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport pt from \"date-fns/locale/pt\";\r\nimport moment from \"moment\";\r\n\r\nimport Select from \"react-select\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nregisterLocale(\"pt\", pt);\r\n\r\n// valida campo requerido\r\nconst validarRequerido = (value) => {\r\n  return !value;\r\n};\r\n\r\n// valida o email\r\nconst validarEmail = (value) => {\r\n  return !isEmail(value);\r\n};\r\n\r\n//Valida o tamanho da senha\r\nconst validarTamanhoSenha = (value) => {\r\n  return value.length < 6 || value.length > 25;\r\n};\r\n\r\nconst validarFormulario = (estado) => {\r\n  // Analisa os erros (todas variaveis vazias)\r\n  for (const [key, value] of Object.entries(estado.erro)) {\r\n    if (value) {\r\n      console.log(\"erro erro\", key, value);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // Analisa as variaveis (todas variaveis preenchidas)\r\n  for (const [key, value] of Object.entries(estado.dados)) {\r\n    if (!value) {\r\n      console.log(\"erro estado\", key, value);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nexport default class Registrar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      estado: {\r\n        carregando: false,\r\n        concordo: false,\r\n        mensagemErro: [],\r\n        dados: {\r\n          nomeCompleto: \"\",\r\n          email: \"\",\r\n          senha: \"\",\r\n          confSenha: \"\",\r\n          dtNascimento: new Date(moment().subtract(16, \"years\")),\r\n          cidade: \"\",\r\n          estado: \"\",\r\n        },\r\n        erro: {\r\n          nomeCompleto: \"\",\r\n          email: \"\",\r\n          senha: \"\",\r\n          confSenha: \"\",\r\n          dtNascimento: \"\",\r\n          cidade: \"\",\r\n          estado: \"\",\r\n        },\r\n        ufs: [\r\n          { value: \"RS\", label: \"Rio Grande do Sul\" },\r\n          { value: \"SC\", label: \"Santa Catarina\" },\r\n          { value: \"PR\", label: \"Paraná\" },\r\n          { value: \"SP\", label: \"São Paulo\" },\r\n        ],\r\n      },\r\n    };\r\n\r\n    this.handleModData = this.handleModData.bind(this);\r\n    this.aoMudarInput = this.aoMudarInput.bind(this);\r\n    this.handleRegistrar = this.handleRegistrar.bind(this);\r\n    this.verificarCampos = this.verificarCampos.bind(this);\r\n    this.aoMudarConcordo = this.aoMudarConcordo.bind(this);\r\n    this.aoMudarEstado = this.aoMudarEstado.bind(this);\r\n  }\r\n\r\n  aoMudarEstado(e) {\r\n    let Estado = { ...this.state.estado };\r\n    Estado.dados.estado = e.value;\r\n    this.setState({\r\n      estado: Estado,\r\n    });\r\n  }\r\n\r\n  aoMudarConcordo = (e) => {\r\n    let Estado = { ...this.state.estado };\r\n    Estado.concordo = e.target.checked;\r\n    this.setState({\r\n      estado: Estado,\r\n    });\r\n  };\r\n\r\n  verificarCampos(nomeCampo, valorCampo) {\r\n    let Estado = {\r\n      ...this.state.estado,\r\n    };\r\n\r\n    switch (nomeCampo) {\r\n      case \"nomeCompleto\":\r\n        return valorCampo.length < 4\r\n          ? \"O nome completo deve ter no mínimo 4 caracteres.\"\r\n          : \"\";\r\n      case \"email\":\r\n        return validarEmail(valorCampo)\r\n          ? \"Favor preencher um email válido.\"\r\n          : \"\";\r\n      case \"senha\":\r\n        return validarTamanhoSenha(valorCampo)\r\n          ? \"A senha deve ter no mínimo 6 caracteres.\"\r\n          : \"\";\r\n      case \"confSenha\":\r\n        return Estado.erro.confSenha;\r\n      case \"dtNascimento\":\r\n        console.log(nomeCampo, valorCampo);\r\n        return validarRequerido(valorCampo) ? \"Este campo é requerido.\" : \"\";\r\n      case \"cidade\":\r\n        return validarRequerido(valorCampo) ? \"Este campo é requerido.\" : \"\";\r\n      case \"estado\":\r\n        return validarRequerido(valorCampo) ? \"Este campo é requerido.\" : \"\";\r\n      case \"concordo\":\r\n        return valorCampo\r\n          ? \"Você deve concordar com os termos de uso e serviço.\"\r\n          : \"\";\r\n      default:\r\n        break;\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  handleModData = (data) => {\r\n    let Estado = {\r\n      ...this.state.estado,\r\n    };\r\n\r\n    Estado.dados.dtNascimento = data;\r\n\r\n    this.setState({\r\n      estado: Estado,\r\n    });\r\n  };\r\n\r\n  aoMudarInput = (e) => {\r\n    e.preventDefault();\r\n\r\n    let Estado = {\r\n      ...this.state.estado,\r\n    };\r\n\r\n    const nomeCampo = e.target.name;\r\n    const valorCampo = e.target.value;\r\n\r\n    Estado.erro[nomeCampo] = this.verificarCampos(nomeCampo, valorCampo);\r\n\r\n    Estado.dados[nomeCampo] = valorCampo;\r\n\r\n    this.setState({\r\n      estado: Estado,\r\n    });\r\n  };\r\n\r\n  handleRegistrar = (e) => {\r\n    e.preventDefault();\r\n\r\n    let Estado = {\r\n      ...this.state.estado,\r\n    };\r\n\r\n    Estado.mensagemErro = [];\r\n\r\n    this.setState({\r\n      estado: Estado,\r\n    });\r\n\r\n    if (!Estado.concordo) {\r\n      Estado.mensagemErro.push(\r\n        \"Favor concordar com os termos de uso e serviço.\"\r\n      );\r\n\r\n      this.setState({\r\n        estado: Estado,\r\n      });\r\n    } else {\r\n      Estado.mensagemErro = [];\r\n\r\n      this.setState({\r\n        estado: Estado,\r\n      });\r\n    }\r\n\r\n    if (Estado.dados.senha !== Estado.dados.confSenha) {\r\n      Estado.erro.senha = \"As duas senhas não conferem.\";\r\n      Estado.erro.confSenha = \"As duas senhas não conferem.\";\r\n\r\n      this.setState({\r\n        estado: Estado,\r\n      });\r\n    }\r\n\r\n    if (validarFormulario(Estado) && Estado.mensagemErro.length < 1) {\r\n      console.log(\"Estado valido:\", Estado);\r\n      AuthService.registrar(Estado.dados)\r\n        .then((response) => {\r\n          console.log(\"funcionou\", response);\r\n          AuthService.login(Estado.dados.email, Estado.dados.senha).then(() => {\r\n            this.props.history.push(\"/perfil\");\r\n            window.location.reload();\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"erro!\", error);\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n          console.log(\"Erro\", resMessage);\r\n          Estado.mensagemErro.push(resMessage);\r\n          this.setState({\r\n            estado: Estado,\r\n          });\r\n        });\r\n    } else {\r\n      Estado.mensagemErro.push(\r\n        \"Favor verifique o formulário e tente novamente.\"\r\n      );\r\n      Object.entries(Estado.dados).forEach((entrada) => {\r\n        const [key, value] = entrada;\r\n        Estado.erro[key] = this.verificarCampos(key, value);\r\n      });\r\n      Estado.carregando = false;\r\n      this.setState({\r\n        estado: Estado,\r\n      });\r\n      console.log(\"Estado inválido\", Estado);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { erro } = this.state.estado;\r\n\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card cardRegistrar-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <form onSubmit={this.handleRegistrar} noValidate>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"nomeCompleto\"> Nome completo</label>\r\n              <input\r\n                type=\"text\"\r\n                className={\r\n                  erro.nomeCompleto.length > 0\r\n                    ? \"is-invalid form-control\"\r\n                    : \"form-control\"\r\n                }\r\n                name=\"nomeCompleto\"\r\n                onChange={this.aoMudarInput}\r\n              />\r\n            </div>\r\n\r\n            {erro.nomeCompleto.length > 0 && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {\" \"}\r\n                  {erro.nomeCompleto}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\"> Email </label>\r\n              <input\r\n                type=\"text\"\r\n                className={\r\n                  erro.email.length > 0\r\n                    ? \"is-invalid form-control\"\r\n                    : \"form-control\"\r\n                }\r\n                name=\"email\"\r\n                onChange={this.aoMudarInput}\r\n              />{\" \"}\r\n            </div>\r\n\r\n            {erro.email.length > 0 && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {\" \"}\r\n                  {erro.email}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"senha\"> Senha</label>\r\n              <input\r\n                type=\"password\"\r\n                className={\r\n                  erro.senha.length > 0\r\n                    ? \"is-invalid form-control\"\r\n                    : \"form-control\"\r\n                }\r\n                name=\"senha\"\r\n                onChange={this.aoMudarInput}\r\n              />\r\n            </div>\r\n\r\n            {erro.senha.length > 0 && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {\" \"}\r\n                  {erro.senha}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\"> Confirmar senha </label>\r\n              <input\r\n                type=\"password\"\r\n                className={\r\n                  erro.confSenha.length > 0\r\n                    ? \"is-invalid form-control\"\r\n                    : \"form-control\"\r\n                }\r\n                name=\"confSenha\"\r\n                onChange={this.aoMudarInput}\r\n              />\r\n            </div>\r\n\r\n            {erro.confSenha.length > 0 && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {\" \"}\r\n                  {erro.confSenha}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"dtNascimento\">Data de nascimento:</label>\r\n              <DatePicker\r\n                className={\r\n                  erro.dtNascimento.length > 0\r\n                    ? \"is-invalid form-control\"\r\n                    : \"form-control\"\r\n                }\r\n                name=\"dtNascimento\"\r\n                dateFormat=\"dd/MM/yyyy\"\r\n                selected={this.state.estado.dados.dtNascimento}\r\n                locale=\"pt\"\r\n                onChange={(date) => this.handleModData(date)}\r\n              />\r\n            </div>\r\n\r\n            {erro.dtNascimento.length > 0 && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {\" \"}\r\n                  {erro.dtNascimento}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"cidade\"> Cidade: </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"cidade\"\r\n                name=\"cidade\"\r\n                className={\r\n                  erro.cidade.length > 0\r\n                    ? \"is-invalid form-control\"\r\n                    : \"form-control\"\r\n                }\r\n                onChange={this.aoMudarInput}\r\n              />\r\n            </div>\r\n\r\n            {erro.cidade.length > 0 && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {\" \"}\r\n                  {erro.cidade}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"estado\"> Estado: </label>\r\n              <Select\r\n                name=\"estado\"\r\n                options={this.state.estado.ufs}\r\n                onChange={this.aoMudarEstado}\r\n              ></Select>\r\n            </div>\r\n\r\n            {erro.estado.length > 0 && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {\" \"}\r\n                  {erro.estado}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"form-group\">\r\n              <input\r\n                className=\"form-group\"\r\n                id=\"concordo\"\r\n                name=\"concordo\"\r\n                type=\"checkbox\"\r\n                onChange={this.aoMudarConcordo}\r\n              />{\" \"}\r\n              &nbsp; Concordo com os termos de uso e serviço.\r\n            </div>\r\n\r\n            {this.state.estado.mensagemErro.length > 0 && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {this.state.estado.mensagemErro.map((mensagem) => (\r\n                    <li key={mensagem}>{mensagem}</li>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.state.carregando}\r\n              >\r\n                {\" \"}\r\n                {this.state.carregando && this.state.concordo ? (\r\n                  <span className=\"spinner-border spinner-border-sm\"> </span>\r\n                ) : (\r\n                  \"Cadastrar\"\r\n                )}{\" \"}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// função auxiliar que carrega o header de autorização HTTP\r\n// para solicitações ao backend do localStorage\r\nexport default function authHeader() {\r\n    const usuario = JSON.parse(localStorage.getItem('usuario'));\r\n  \r\n    if (usuario && usuario.accessToken) {\r\n      // para Node.js Express back-end\r\n      return { 'x-access-token': usuario.accessToken };\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n  \r\n  ","import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL_PAGINA;\r\n\r\nconst obterTelaPublica = () => {\r\n  return axios.get(API_URL + \"publico\");\r\n};\r\n\r\nconst obterTelaUsuario = () => {\r\n  return axios.get(API_URL + \"usuario\", { headers: authHeader() });\r\n};\r\n\r\nconst obterTelaMod = () => {\r\n  return axios.get(API_URL + \"mod\", { headers: authHeader() });\r\n};\r\n\r\nconst obterTelaAdmin = () => {\r\n  return axios.get(API_URL + \"admin\", { headers: authHeader() });\r\n};\r\n\r\nexport default {\r\n    obterTelaPublica,\r\n    obterTelaUsuario,\r\n    obterTelaMod,\r\n    obterTelaAdmin,\r\n};\r\n","// Pagina publica. Usuarios não logados podem acessar\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nimport servicoUsuario from \"../services/usuario.service\";\r\n\r\nconst Home = () => {\r\n  const [conteudo, setConteudo] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    servicoUsuario.obterTelaPublica().then(\r\n      (response) => {\r\n        setConteudo(response.data);\r\n      },\r\n      (error) => {\r\n        const _content =\r\n          (error.response && error.response.data) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        setConteudo(_content);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\">\r\n        <h3>{conteudo}</h3>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Perfil = () => {\r\n  const { usuario: usuarioAtual } = useSelector((state) => state.auth);\r\n\r\n  // Redireciona para página de login caso usuario não esteja logado\r\n  if (!usuarioAtual) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\">\r\n        <h3>\r\n          Perfil de: <strong>{usuarioAtual.nomeCompleto}</strong>\r\n        </h3>\r\n      </header>\r\n      <p>\r\n        <strong>Id:</strong> {usuarioAtual.id}\r\n      </p>\r\n      <p>\r\n        <strong>Cidade/Estado:</strong> {usuarioAtual.cidade}/{usuarioAtual.siglaEstado}\r\n      </p>\r\n      <p>\r\n        <strong>Email:</strong> {usuarioAtual.email}\r\n      </p>\r\n      <strong>Cargo(s):</strong>\r\n      <ul>\r\n        {usuarioAtual.cargos &&\r\n          usuarioAtual.cargos.map((cargo, index) => <li key={index}>{cargo}</li>)}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Perfil;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport servicoUsuario from \"../../services/usuario.service\";\r\n\r\nconst TelaUsuario = () => {\r\n  const [conteudo, setConteudo] = useState(\"\");\r\n  const [selecao, setSelecao] = useState(\"instalacao\");\r\n  const [liberado, setLiberado] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    servicoUsuario.obterTelaUsuario().then(\r\n      (resposta) => {\r\n        setConteudo(resposta.data);\r\n        setLiberado(true);\r\n      },\r\n      (erro) => {\r\n        console.log(\"erro\", erro);\r\n        const _content =\r\n          // (erro.resposta &&\r\n          //   erro.resposta.data &&\r\n          //   erro.resposta.data.mensagem) ||\r\n          // erro.message ||\r\n          erro.response.data.message.toString();\r\n        console.log('content', _content);\r\n        setConteudo(_content);\r\n        setLiberado(false);\r\n      }\r\n    )\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n        <header>\r\n        <h5 className=\"col border\">{conteudo}</h5>\r\n        </header>\r\n      { liberado &&\r\n      <div className=\"row\">\r\n        <div className=\"col-4\">\r\n          <div className=\"list-group\" id=\"list-tab\" role=\"tablist\">\r\n            <button className={selecao === 'instalacao' ? \"list-group-item list-group-item-action active\" : \"list-group-item list-group-item-action\"} \r\n                id=\"instalacao\" data-toggle=\"list\" onClick={()=>setSelecao('instalacao')} role=\"tab\" aria-controls=\"home\">Ligação de água</button>\r\n\r\n            <button className={selecao === 'fatura' ? \"list-group-item list-group-item-action active\" : \"list-group-item list-group-item-action\"} \r\n                id=\"fatura\" data-toggle=\"list\" onClick={()=>setSelecao('fatura')} role=\"tab\" aria-controls=\"profile\">Fatura</button>\r\n\r\n            <button className={selecao === 'solicitacoes' ? \"list-group-item list-group-item-action active\" : \"list-group-item list-group-item-action\"} \r\n                id=\"solicitacoes\" data-toggle=\"list\" onClick={()=>setSelecao('solicitacoes')} role=\"tab\" aria-controls=\"messages\">Solicitações</button>\r\n\r\n            <button className={selecao === 'protocolos' ? \"list-group-item list-group-item-action active\" : \"list-group-item list-group-item-action\"} \r\n                id=\"protocolos\" data-toggle=\"list\" onClick={()=>setSelecao('protocolos')} role=\"tab\" aria-controls=\"settings\">Protocolos</button>\r\n            \r\n            <button className={selecao === 'avaliacoes' ? \"list-group-item list-group-item-action active\" : \"list-group-item list-group-item-action\"} \r\n                id=\"avaliacoes\" data-toggle=\"list\" onClick={()=>setSelecao('avaliacoes')} role=\"tab\" aria-controls=\"settings\">Avaliações</button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-8\">\r\n          <div className=\"tab-content\" id=\"nav-tabContent\">\r\n\r\n            <div className={selecao === 'instalacao' ? \"tab-pane fade show active\" : \"tab-pane fade\"}\r\n              id=\"list-instalacao\" role=\"tabpanel\" aria-labelledby=\"instalacao\">\r\n                <ul className=\"list-group list-group-flush\">\r\n                  <li className=\"list-group-item\">\r\n                  <Link to={\"/instalacao/cadastro\"} className=\"form-group\">\r\n                    Cadastrar instalação de água\r\n                  </Link>\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                  <Link to={\"/instalacao/listar\"} className=\"form-group\">\r\n                    Lista de instalação de água\r\n                  </Link>\r\n                  </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className={selecao === 'fatura' ? \"tab-pane fade show active\" : \"tab-pane fade\"}\r\n              id=\"list-fatura\" role=\"tabpanel\" aria-labelledby=\"fatura\">\r\n                <ul className=\"list-group list-group-flush\">\r\n                  <li className=\"list-group-item\">\r\n                  <Link to={\"/fatura/listar\"} className=\"form-group\">\r\n                    Histórico de faturas\r\n                  </Link>\r\n                  </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className={selecao === 'solicitacoes' ? \"tab-pane fade show active\" : \"tab-pane fade\"}\r\n              id=\"list-solicitacoes\" role=\"tabpanel\" aria-labelledby=\"solicitacoes\">\r\n                Em breve...\r\n            </div>\r\n\r\n            <div className={selecao === 'protocolos' ? \"tab-pane fade show active\" : \"tab-pane fade\"}\r\n              id=\"list-protocolos\" role=\"tabpanel\" aria-labelledby=\"protocolos\">\r\n               <ul className=\"list-group list-group-flush\">\r\n                  <li className=\"list-group-item\">\r\n                  <Link to={\"/denuncia/criar\"} className=\"form-group\">\r\n                    Protocolar denúncia\r\n                  </Link>\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                  <Link to={\"/denuncia/listar\"} className=\"form-group\">\r\n                    Listar denúncias protocoladas\r\n                  </Link>\r\n                  </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className={selecao === 'avaliacoes' ? \"tab-pane fade show active\" : \"tab-pane fade\"}\r\n              id=\"list-avaliacoes\" role=\"tabpanel\" aria-labelledby=\"avaliacoes\">\r\n                <ul className=\"list-group list-group-flush\">\r\n                  <li className=\"list-group-item\">\r\n                  <Link to={\"/avaliacao/criar\"} className=\"form-group\">\r\n                    Avaliar\r\n                  </Link>\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                  <Link to={\"/avaliacao/listar\"} className=\"form-group\">\r\n                    Listar avaliações\r\n                  </Link>\r\n                  </li>\r\n                </ul>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div> }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TelaUsuario;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport servicoUsuario from \"../../services/usuario.service\";\r\n\r\nconst TelaMod = (props) => {\r\n  const [conteudo, setConteudo] = useState(\"\");\r\n\r\n  const { estaLogado } = useSelector((state) => state.auth);\r\n\r\n  // Se não está logado\r\n  if (!estaLogado) {\r\n    props.history.push(\"/login\");\r\n    window.location.reload();\r\n  }\r\n\r\n  useEffect(() => {\r\n    servicoUsuario.obterTelaMod().then(\r\n      (resposta) => {\r\n        setConteudo(resposta.data);\r\n      },\r\n      (erro) => {\r\n        const _content =\r\n          (erro.resposta &&\r\n            erro.resposta.data &&\r\n            erro.resposta.data.mensagem) ||\r\n          erro.message ||\r\n          erro.toString();\r\n\r\n        setConteudo(_content);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\">\r\n        <h3>{conteudo}</h3>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TelaMod;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport servicoUsuario from \"../../services/usuario.service\";\r\n\r\nconst TelaAdmin = (props) => {\r\n  const [conteudo, setConteudo] = useState(\"\");\r\n\r\n  const { estaLogado } = useSelector((state) => state.auth);\r\n\r\n  // Se não está logado\r\n  if (!estaLogado) {\r\n    props.history.push(\"/login\");\r\n    window.location.reload();\r\n  }\r\n\r\n  useEffect(() => {\r\n    servicoUsuario.obterTelaAdmin().then(\r\n      (resposta) => {\r\n        setConteudo(resposta.data);\r\n      },\r\n      (erro) => {\r\n        const _content =\r\n          (erro.resposta &&\r\n            erro.resposta.data &&\r\n            erro.resposta.data.mensagem) ||\r\n          erro.message ||\r\n          erro.toString();\r\n\r\n        setConteudo(_content);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\">\r\n        <h3>{conteudo}</h3>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TelaAdmin;\r\n","import React, { Component } from \"react\";\r\nimport { isEmail } from \"validator\";\r\n\r\n// import { recuperarSenha } from \"../actions/auth\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst validarFormulario = ({ erro }) => {\r\n    let ehValido = false;\r\n\r\n    Object.values(erro).forEach(val => {\r\n        if (val.length > 0) {\r\n            ehValido = false\r\n        } else {\r\n            ehValido = true\r\n        }\r\n    });\r\n\r\n    return ehValido;\r\n};\r\n\r\nexport default class RecuperarSenha extends Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n            carregando: false,\r\n            email: '',\r\n            erro: {\r\n                email: ''\r\n            },\r\n            sucesso: {\r\n                email: ''\r\n            }\r\n        };\r\n\r\n    };\r\n\r\n    aoMudarEmail = (e) => {\r\n        e.preventDefault();\r\n        const valor = e.target.value;\r\n        let Erro = { ...this.state.erro};\r\n        console.log('aoMudarEmail',valor);\r\n\r\n        Erro.email = !isEmail(valor) ? \"Email inválido!\" : '';\r\n\r\n        console.log(\"Resultado\",Erro.email)\r\n\r\n        this.setState({\r\n            email: valor,\r\n            erro: Erro\r\n        });\r\n        \r\n      };\r\n\r\n    handleRecuperarSenha = (e) => {\r\n        // Evita comportamento default do navegador\r\n        // ex. refresh/reload  por causa do submit do formulário\r\n        e.preventDefault();\r\n        this.setState({\r\n            carregando: true\r\n        });\r\n\r\n        if(validarFormulario(this.state)) {\r\n            console.log(\"Valido\",this.state);\r\n            AuthService.recuperarSenha(this.state.email)\r\n            .then( response => {\r\n                console.log(\"response\", response)\r\n                this.setState({\r\n                    carregando: false,\r\n                    sucesso: {\r\n                        email: response.message\r\n                    }\r\n                });\r\n                console.log('Email encontrado e recuperação de senha enviada.');\r\n                console.log(\"State\",this.state);\r\n            })\r\n            .catch( error => {\r\n                const resMessage =\r\n                (error.response &&\r\n                  error.response.data &&\r\n                  error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n\r\n                this.setState({\r\n                    carregando: false,\r\n                    erro: {\r\n                        email: resMessage\r\n                    }\r\n                });\r\n                console.log('Erro!',resMessage);\r\n                console.log(\"State\",this.state);\r\n            })\r\n            // });            \r\n        } else {\r\n            console.log(\"Invalido\",this.state);\r\n            this.setState({\r\n                carregando: false\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n    \r\n        const { erro, sucesso } = this.state;\r\n\r\n        return (\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"card card-container\">\r\n        \r\n                    <form onSubmit={this.handleRecuperarSenha} noValidate>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email\">Email</label>\r\n                                <input\r\n                                type=\"text\"\r\n                                className={erro.email.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                name=\"email\"\r\n                                value={this.state.email}\r\n                                onChange={this.aoMudarEmail}\r\n                                />\r\n                        </div>\r\n\r\n                        {erro.email.length > 0 && (\r\n                       <div className=\"form-group\">\r\n                            <div className=\"alert alert-danger\" role=\"alert\">\r\n                            {erro.email}\r\n                            </div>\r\n                        </div>\r\n                        )}\r\n\r\n                        {sucesso.email.length > 0 && (\r\n                       <div className=\"form-group\">\r\n                            <div className=\"alert alert-primary\" role=\"alert\">\r\n                            {sucesso.email}\r\n                            </div>\r\n                        </div>\r\n                        )}\r\n\r\n                       <div className=\"form-group\">\r\n                         <button className=\"btn btn-primary btn-block\"\r\n                            disabled={this.state.carregando} >\r\n                            {\r\n                            this.state.carregando ? \r\n                            <span className=\"spinner-border spinner-border-sm\"></span>\r\n                            :\r\n                             \"Recuperar senha\"\r\n                            }\r\n                         </button>\r\n                       </div>\r\n\r\n                    </form>\r\n\r\n                  </div>\r\n                </div>\r\n        )\r\n    }\r\n}","import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\nrequire(\"dotenv\").config();\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL_INSTALACAO;\r\n\r\nconst cadastrar = (dados) => {\r\n  console.log(\"chegou cadastrar\");\r\n  console.log(\"dados\", dados);\r\n  console.log(\"rota\", API_URL);\r\n  return axios\r\n    .post(\r\n      API_URL + \"cadastrar\",\r\n      {\r\n        codConsumidor: dados.codConsumidor,\r\n        email: dados.email,\r\n        cpf: dados.cpf,\r\n      },\r\n      {\r\n        headers: authHeader(),\r\n      }\r\n    )\r\n    .then((response) => {\r\n      console.log(\"resposta instal servi\", response);\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst listar = (email) => {\r\n  console.log(\"listar\", email);\r\n  return axios\r\n    .post(\r\n      API_URL + \"listar\",\r\n      {\r\n        email: email,\r\n      },\r\n      {\r\n        headers: authHeader(),\r\n      }\r\n    )\r\n    .then((response) => {\r\n      console.log(\"resposta listar\", response);\r\n      return response.data;\r\n    });\r\n};\r\n\r\nexport default {\r\n  cadastrar,\r\n  listar,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { cadastrar } from \"../../actions/instalacao\";\r\n\r\nconst validarCPF = (cpf) => {\r\n  cpf = cpf.replace(/[^\\d]+/g, \"\");\r\n  if (cpf === \"\") {\r\n    return false;\r\n  }\r\n  // Elimina CPFs invalidos conhecidos\r\n  if (\r\n    cpf.length !== 11 ||\r\n    cpf === \"00000000000\" ||\r\n    cpf === \"11111111111\" ||\r\n    cpf === \"22222222222\" ||\r\n    cpf === \"33333333333\" ||\r\n    cpf === \"44444444444\" ||\r\n    cpf === \"55555555555\" ||\r\n    cpf === \"66666666666\" ||\r\n    cpf === \"77777777777\" ||\r\n    cpf === \"88888888888\" ||\r\n    cpf === \"99999999999\"\r\n  )\r\n    return false;\r\n  // Valida 1o digito\r\n  let add = 0;\r\n  for (let i = 0; i < 9; i++) add += parseInt(cpf.charAt(i)) * (10 - i);\r\n  let rev = 11 - (add % 11);\r\n  if (rev === 10 || rev === 11) rev = 0;\r\n  if (rev !== parseInt(cpf.charAt(9))) return false;\r\n  // Valida 2o digito\r\n  add = 0;\r\n  for (let i = 0; i < 10; i++) add += parseInt(cpf.charAt(i)) * (11 - i);\r\n  rev = 11 - (add % 11);\r\n  if (rev === 10 || rev === 11) rev = 0;\r\n  if (rev !== parseInt(cpf.charAt(10))) {\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n};\r\n\r\n// pagina login\r\nconst CadastrarInstalacao = (props) => {\r\n  const [cpf, setCpf] = useState(\"\");\r\n  const [codConsumidor, setCodConsumidor] = useState(\"\");\r\n  const [tipoMensagem, setTipoMensagem] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [mensagemCpf, setMensagemCpf] = useState(\"\");\r\n  const [mensagemCodConsumidor, setMensagemCodConsumidor] = useState(\"\");\r\n\r\n  const { estaLogado, usuario } = useSelector((state) => state.auth);\r\n  const { mensagem } = useSelector((state) => state.mensagem);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // Se não está logado\r\n  if (!estaLogado) {\r\n    props.history.push(\"/login\");\r\n    window.location.reload();\r\n  }\r\n\r\n  const aoMudarCpf = (e) => {\r\n    const cpf = e.target.value;\r\n    if (!cpf) {\r\n      setMensagemCpf(\"CPF requerido!\");\r\n    } else if (!validarCPF(cpf)) {\r\n      setMensagemCpf(\"CPF inválido!\");\r\n    } else {\r\n      setMensagemCpf(\"\");\r\n    }\r\n    setCpf(cpf);\r\n  };\r\n\r\n  const aoMudarCodConsumidor = (e) => {\r\n    const codConsumidor = e.target.value;\r\n    if (!codConsumidor) {\r\n      setMensagemCodConsumidor(\"Este campo é requerido!\");\r\n    } else {\r\n      setMensagemCodConsumidor(\"\");\r\n    }\r\n\r\n    setCodConsumidor(codConsumidor);\r\n  };\r\n\r\n  const handleCadastro = (e) => {\r\n    // Evita comportamento default do navegador\r\n    // ex. refresh/reload  por causa do submit do formulário\r\n    e.preventDefault();\r\n\r\n    setLoading(true);\r\n\r\n    if (!mensagemCodConsumidor && !mensagemCpf && estaLogado) {\r\n      console.log(\"usuario\", usuario);\r\n      const dados = {\r\n        codConsumidor: codConsumidor,\r\n        email: usuario.email,\r\n        cpf: cpf,\r\n      };\r\n      dispatch(cadastrar(dados))\r\n        .then(() => {\r\n          setTipoMensagem(false);\r\n          console.log(\"Sucesso Cadastro!\");\r\n        })\r\n        .catch(() => {\r\n          console.log(\"Erro cadastro!\", mensagem, estaLogado);\r\n          setTipoMensagem(true);\r\n        });\r\n    } else {\r\n      console.log(\"Erro tela login!\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-md-12\">\r\n      <div className=\"card card-container\">\r\n        <form onSubmit={handleCadastro}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">CPF</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"cpf\"\r\n              value={cpf}\r\n              onChange={aoMudarCpf}\r\n            />\r\n          </div>\r\n\r\n          {mensagemCpf && (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n              {mensagemCpf}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"senha\">Código de consumidor</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"codConsumidor\"\r\n              value={codConsumidor}\r\n              onChange={aoMudarCodConsumidor}\r\n            />\r\n          </div>\r\n          {mensagemCodConsumidor && (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n              {mensagemCodConsumidor}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"form-group\">\r\n            <button className=\"btn btn-primary btn-block\" disabled={loading}>\r\n              {loading && (\r\n                <span className=\"spinner-border spinner-border-sm\"></span>\r\n              )}\r\n              <span>Cadastrar</span>\r\n            </button>\r\n          </div>\r\n\r\n          {mensagem && (\r\n            <div className=\"form-group\">\r\n              <div\r\n                className={\r\n                  tipoMensagem ? \"alert alert-danger\" : \"alert alert-primary\"\r\n                }\r\n                role=\"alert\"\r\n              >\r\n                {mensagem}\r\n              </div>\r\n            </div>\r\n          )}\r\n          {/* <CheckButton style={{ display: \"none\" }} ref={checkBtn} /> */}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CadastrarInstalacao;\r\n","import {\r\n    INSTALACAO_CADASTRADA, \r\n    SETAR_MENSAGEM\r\n} from \"./tipo\";\r\n\r\nimport InstalacaoService from \"../services/instalacao.service\";\r\n\r\nexport const cadastrar = (dados) => (dispatch) => {\r\n    return InstalacaoService.cadastrar(dados).then(\r\n        (resposta) => {\r\n            console.log(\"resposta\",resposta);\r\n            dispatch({\r\n                type: INSTALACAO_CADASTRADA,\r\n            });\r\n\r\n            dispatch({\r\n                type: SETAR_MENSAGEM,\r\n                payload: resposta.message,\r\n            });\r\n\r\n            return Promise.resolve();\r\n        },\r\n        (error) => {\r\n            const mensagem =\r\n              (error.response &&\r\n                error.response.data &&\r\n                error.response.data.message) ||\r\n              error.message ||\r\n              error.toString();\r\n      \r\n            dispatch({\r\n                type: SETAR_MENSAGEM,\r\n                payload: mensagem,\r\n            });\r\n      \r\n            return Promise.reject();\r\n          }\r\n    )\r\n}","import React, { Component } from \"react\";\r\n\r\nimport InstalacaoService from \"../../services/instalacao.service\";\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\nimport moment from \"moment\";\r\nimport \"moment/locale/pt\";\r\nmoment.locale(\"pt\");\r\n\r\nexport default class listarInstalacao extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      usuario: AuthService.usuarioLogado(),\r\n      instalacoes: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.state.usuario) {\r\n      this.props.history.push(\"/login\");\r\n      window.location.reload();\r\n    }\r\n    let Estado = { ...this.state };\r\n    console.log(\"Estado\", Estado);\r\n    InstalacaoService.listar(Estado.usuario.email)\r\n      .then((response) => {\r\n        console.log(\"response\", response.instalacoes);\r\n        Estado.instalacoes = response.instalacoes;\r\n        this.setState({\r\n          usuario: Estado.usuario,\r\n          instalacoes: Estado.instalacoes,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { instalacoes } = this.state;\r\n\r\n    const listaItens = instalacoes.map((instalacao) => {\r\n      return (\r\n        <div className=\"row\" key={[\"row\", instalacao.id].toString()}>\r\n          <div className=\"col border\" key={[\"id\", instalacao.id].toString()}>\r\n            {instalacao.id}\r\n          </div>\r\n          <div\r\n            className=\"col border\"\r\n            key={[\"codConsumidor\", instalacao.codConsumidor].toString()}\r\n          >\r\n            {instalacao.codConsumidor}\r\n          </div>\r\n          <div className=\"col border\" key={[\"cpf\", instalacao.cpf].toString()}>\r\n            {instalacao.cpf}\r\n          </div>\r\n          <div\r\n            className=\"col border\"\r\n            key={[\"createdAt\", instalacao.createdAt].toString()}\r\n          >\r\n            {moment(instalacao.createdAt).format(\"LLL\")}\r\n          </div>\r\n          <div\r\n            className=\"col border\"\r\n            key={[\"updatedAt\", instalacao.id].toString()}\r\n          >\r\n            {moment(instalacao.updatedAt).format(\"LLL\")}\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"card card-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col border\">ID:</div>\r\n            <div className=\"col border\">Código de consumidor:</div>\r\n            <div className=\"col border\">CPF:</div>\r\n            <div className=\"col border\">Criado em:</div>\r\n            <div className=\"col border\">Atualizado em:</div>\r\n          </div>\r\n\r\n          {listaItens}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL_FATURA;\r\n\r\nconst cadastrar = (dados) => {\r\n    console.log(\"chegou cadastrar\");\r\n    console.log(\"dados\",dados);\r\n    console.log(\"rota\", API_URL);\r\n};\r\n\r\nconst listar = (email) => {\r\n    console.log(\"listar\",email);\r\n    console.log(\"rota\", API_URL);\r\n    return axios.post(API_URL + \"listar\", {\r\n        email: email\r\n    }, {\r\n        headers: authHeader()\r\n    })\r\n    .then((response) => {\r\n        console.log('resposta listar',response);\r\n        return response.data;\r\n    })\r\n};\r\n\r\nexport default {\r\n    cadastrar,\r\n    listar\r\n};","import React, { Component } from \"react\";\r\n\r\nimport FaturaService from \"../../services/fatura.service\";\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\nimport moment from \"moment\";\r\nimport \"moment/locale/pt\";\r\nmoment.locale(\"pt\");\r\n\r\nexport default class listarFatura extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      usuario: AuthService.usuarioLogado(),\r\n      faturas: [],\r\n      faturasFiltradas: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.state.usuario) {\r\n      this.props.history.push(\"/login\");\r\n      window.location.reload();\r\n    }\r\n    let Estado = { ...this.state };\r\n    console.log(\"Estado\", Estado);\r\n    FaturaService.listar(Estado.usuario.email)\r\n      .then((response) => {\r\n        console.log(\"response\", response.faturas);\r\n        Estado.faturas = response.faturas;\r\n        this.setState({\r\n          usuario: Estado.usuario,\r\n          faturas: Estado.faturas,\r\n          faturasFiltradas: Estado.faturas,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error);\r\n      });\r\n  }\r\n\r\n  filtro = (e) => {\r\n    if (!e.target.value) {\r\n      this.setState({\r\n        faturasFiltradas: this.state.faturas,\r\n      });\r\n    } else {\r\n      const listaFiltrada = this.state.faturas.filter((fatura) => {\r\n        console.log(fatura[e.target.id]);\r\n        return fatura[e.target.id].toString().indexOf(e.target.value) === 0;\r\n      });\r\n      console.log(\"target value\", e.target.value);\r\n      console.log(\"lista filtrada\", listaFiltrada);\r\n      this.setState({\r\n        faturasFiltradas: listaFiltrada,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let faturas =\r\n      !this.state.faturasFiltradas.length > 0 ? (\r\n        <div>Nenhuma fatura encontrada</div>\r\n      ) : (\r\n        this.state.faturasFiltradas.map((fatura) => {\r\n          return (\r\n            <div className=\"row\" key={[\"row\", fatura.id].toString()}>\r\n              <div className=\"col border\" key={[\"id\", fatura.id].toString()}>\r\n                {fatura.id}\r\n              </div>\r\n              <div\r\n                className=\"col border\"\r\n                key={[\"instalacaoId\", fatura.instalacaoId].toString()}\r\n              >\r\n                {fatura.instalacaoId}\r\n              </div>\r\n              <div\r\n                className=\"col border\"\r\n                key={[\"numFatura\", fatura.numFatura].toString()}\r\n              >\r\n                {fatura.numFatura}\r\n              </div>\r\n              <div className=\"col border\" key={[\"ano\", fatura.ano].toString()}>\r\n                {fatura.ano}\r\n              </div>\r\n              <div className=\"col border\" key={[\"mes\", fatura.mes].toString()}>\r\n                {fatura.mes}\r\n              </div>\r\n              <div\r\n                className=\"col border\"\r\n                key={[\"valor\", fatura.valor].toString()}\r\n              >\r\n                R$ {fatura.valor}\r\n              </div>\r\n              <div\r\n                className=\"col border\"\r\n                key={[\"situacao\", fatura.situacao].toString()}\r\n              >\r\n                {fatura.situacao}\r\n              </div>\r\n              <div\r\n                className=\"col border\"\r\n                key={[\"createdAt\", fatura.createdAt].toString()}\r\n              >\r\n                {moment(fatura.createdAt).format(\"LLL\")}\r\n              </div>\r\n            </div>\r\n          );\r\n        })\r\n      );\r\n\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">Filtros:</h5>\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"id\"\r\n                  placeholder=\"Filtro Id\"\r\n                  onChange={this.filtro}\r\n                />\r\n              </div>\r\n              <div className=\"col\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"instalacaoId\"\r\n                  placeholder=\"Filtro inst. Id\"\r\n                  onChange={this.filtro}\r\n                />\r\n              </div>\r\n              <div className=\"col\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"numFatura\"\r\n                  placeholder=\"Filtro No fat\"\r\n                  onChange={this.filtro}\r\n                />\r\n              </div>\r\n              <div className=\"col\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"ano\"\r\n                  placeholder=\"Filtro Ano\"\r\n                  onChange={this.filtro}\r\n                />\r\n              </div>\r\n              <div className=\"col\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"mes\"\r\n                  placeholder=\"Filtro Mês\"\r\n                  onChange={this.filtro}\r\n                />\r\n              </div>\r\n              <div className=\"col\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"valor\"\r\n                  placeholder=\"Filtro Valor\"\r\n                  onChange={this.filtro}\r\n                />\r\n              </div>\r\n              <div className=\"col\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"situacao\"\r\n                  placeholder=\"Filtro Sit\"\r\n                  onChange={this.filtro}\r\n                />\r\n              </div>\r\n              <div className=\"col\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"createdAt\"\r\n                  placeholder=\"Filtro Data\"\r\n                  onChange={this.filtro}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col border\">ID:</div>\r\n            <div className=\"col border\">ID instalação:</div>\r\n            <div className=\"col border\">Número da fatura:</div>\r\n            <div className=\"col border\">Ano:</div>\r\n            <div className=\"col border\">Mês:</div>\r\n            <div className=\"col border\">Valor:</div>\r\n            <div className=\"col border\">Situação:</div>\r\n            <div className=\"col border\">Data:</div>\r\n          </div>\r\n\r\n          {faturas}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Badge } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport moment from \"moment\";\r\nimport \"moment/locale/pt\";\r\nmoment.locale(\"pt\");\r\n\r\nclass AvaliacaoModal extends Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n\r\n  fechar = (e) => {\r\n    this.props.fecharModal && this.props.fecharModal(e);\r\n  };\r\n\r\n  render() {\r\n    console.log(\"show\", this.props.show);\r\n    if (!this.props.show) {\r\n      console.log(\"hoje nao\");\r\n      return null;\r\n    }\r\n    return (\r\n      <Modal\r\n        show={this.props.show}\r\n        onHide={this.fechar}\r\n        ref={this.props.ref}\r\n        animation={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {this.props.avaliacao.titulo}\r\n            <Badge variant=\"light\">{this.props.avaliacao.nota}</Badge>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h3>{this.props.avaliacao.atendimento}</h3>\r\n          {this.props.avaliacao.observacoes}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <small className=\"text-muted\">\r\n            {moment(this.props.avaliacao.createdAt).fromNow()}\r\n          </small>\r\n          <Button variant=\"secondary\" onClick={this.fechar}>\r\n            Fechar\r\n          </Button>\r\n          {/* <Button variant=\"primary\" onClick={this.fechar}>\r\n            Save Changes\r\n          </Button> */}\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nAvaliacaoModal.propTypes = {\r\n  fecharModal: PropTypes.func.isRequired,\r\n  show: PropTypes.bool,\r\n};\r\n\r\nexport default AvaliacaoModal;\r\n","import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL_AVALIACAO;\r\n\r\nconst criar = (dados) => {\r\n  return axios\r\n    .post(\r\n      API_URL + \"criar\",\r\n      {\r\n        titulo: dados.titulo,\r\n        nota: dados.nota,\r\n        atendimento: dados.atendimento,\r\n        observacoes: dados.observacoes,\r\n        usuario: dados.usuario,\r\n      },\r\n      {\r\n        headers: authHeader(),\r\n      }\r\n    )\r\n    .then((response) => {\r\n      console.log(\"avaliService\", response);\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst listar = (usuario) => {\r\n  return axios\r\n    .post(\r\n      API_URL + \"listar\",\r\n      {\r\n        usuario: usuario,\r\n      },\r\n      {\r\n        headers: authHeader(),\r\n      }\r\n    )\r\n    .then((response) => {\r\n      console.log(\"resposta listar\", response);\r\n      return response.data;\r\n    });\r\n};\r\n\r\nexport default {\r\n  criar,\r\n  listar,\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport AvaliacaoModal from \"./AvaliacaoModal\";\r\nimport { Card, CardColumns, Badge } from \"react-bootstrap\";\r\nimport AvaliacaoService from \"../../services/avaliacao.service\";\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\nimport moment from \"moment\";\r\nimport \"moment/locale/pt\";\r\nmoment.locale(\"pt\");\r\n\r\nexport default class listarAvaliacao extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.wrapper = React.createRef();\r\n\r\n    this.state = {\r\n      avaliacoes: [],\r\n      avaliacaoModal: {},\r\n      modalAberto: false,\r\n      usuario: AuthService.usuarioLogado(),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.state.usuario) {\r\n      this.props.history.push(\"/login\");\r\n      window.location.reload();\r\n    }\r\n    AvaliacaoService.listar(this.state.usuario)\r\n      .then((resposta) => {\r\n        console.log(\"avaliacoes\", resposta.avaliacoes);\r\n        this.setState({\r\n          avaliacoes: resposta.avaliacoes,\r\n        });\r\n      })\r\n      .catch((erro) => {\r\n        console.log(\"erro\", erro);\r\n      });\r\n  }\r\n\r\n  objectFindByKey = (array, key, value) => {\r\n    for (var i = 0; i < array.length; i++) {\r\n      if (array[i][key] === value) {\r\n        return array[i];\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  abrirModal = (id) => {\r\n    const avaliacaoSelecionada = this.objectFindByKey(\r\n      this.state.avaliacoes,\r\n      \"id\",\r\n      id\r\n    );\r\n    console.log(\"busca id\", avaliacaoSelecionada);\r\n    this.setState({\r\n      avaliacaoModal: avaliacaoSelecionada,\r\n      modalAberto: true,\r\n    });\r\n  };\r\n\r\n  fecharModal = () => {\r\n    console.log(\"fechar modal\");\r\n    this.setState({\r\n      modalAberto: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let cards =\r\n      !this.state.avaliacoes.length > 0 ? (\r\n        <div>Nenhuma avaliação encontrada</div>\r\n      ) : (\r\n        this.state.avaliacoes.map((avaliacao) => {\r\n          return (\r\n            <Card key={[\"card\", avaliacao.id]}>\r\n              <Card.Body key={[\"cardBody\", avaliacao.id]}>\r\n                <Card.Title>{avaliacao.atendimento}</Card.Title>\r\n                <Card.Text>\r\n                  <strong>\r\n                    {avaliacao.titulo} -\r\n                    <Badge variant=\"light\">{avaliacao.nota}</Badge>\r\n                  </strong>\r\n                  <br></br>\r\n                  {avaliacao.observacoes}\r\n                </Card.Text>\r\n                <Card.Text>\r\n                  <small className=\"text-muted\">\r\n                    {moment(avaliacao.createdAt).fromNow()}\r\n                  </small>\r\n                </Card.Text>\r\n                <Card.Link onClick={() => this.abrirModal(avaliacao.id)}>\r\n                  Detalhes\r\n                </Card.Link>\r\n              </Card.Body>\r\n            </Card>\r\n          );\r\n        })\r\n      );\r\n\r\n    return (\r\n      <div>\r\n        <CardColumns>{cards}</CardColumns>\r\n        <AvaliacaoModal\r\n          avaliacao={this.state.avaliacaoModal}\r\n          show={this.state.modalAberto}\r\n          fecharModal={this.fecharModal}\r\n          key={this.wrapper}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { criar } from \"../../actions/avaliacao\";\r\n\r\nconst CriarAvaliacao = (props) => {\r\n  const { estaLogado, usuario } = useSelector((state) => state.auth);\r\n  const { mensagem } = useSelector((state) => state.mensagem);\r\n\r\n  // Se não está logado\r\n  if (!estaLogado) {\r\n    props.history.push(\"/login\");\r\n    window.location.reload();\r\n  }\r\n\r\n  const [titulo, setTitulo] = useState(\"\");\r\n  const [nota, setNota] = useState(\"\");\r\n  const [atendimento, setAtendimento] = useState(\"\");\r\n  const [observacoes, setObservacoes] = useState(\"\");\r\n\r\n  const [loading, setLoading] = useState(\"\");\r\n\r\n  const [mensagemTitulo, setMensagemTitulo] = useState(\"\");\r\n  const [mensagemNota, setMensagemNota] = useState(\"\");\r\n  const [mensagemAtendimento, setMensagemAtendimento] = useState(\"\");\r\n\r\n  const [mensagemBackend, setMensagemBackend] = useState(\"\");\r\n  const [tipoMensagemBackend, setTipoMensagemBackend] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const valores = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0];\r\n\r\n  const rangeAvaliacoes = valores.map((i) => {\r\n    return <option key={i}>{i}</option>;\r\n  });\r\n\r\n  const validarPreenchido = (valor) => {\r\n    if (!valor) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const aoMudarTitulo = (e) => {\r\n    const tituloInserido = e.target.value;\r\n    validarPreenchido(tituloInserido)\r\n      ? setMensagemTitulo(\"\")\r\n      : setMensagemTitulo(\"Preencher título!\");\r\n    setTitulo(tituloInserido);\r\n  };\r\n\r\n  const validarIsNaN = (valor) => {\r\n    if (!isNaN(valor)) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const aoMudarNota = (e) => {\r\n    e.preventDefault();\r\n    const notaSelecionada = e.target.value;\r\n    setNota(notaSelecionada);\r\n    validarPreenchido(notaSelecionada)\r\n      ? setMensagemNota(\"\")\r\n      : setMensagemNota(\"Preencher nota!\");\r\n\r\n    if (validarIsNaN(notaSelecionada)) {\r\n      setMensagemNota(\"Preencher nota!\");\r\n    } else {\r\n      setMensagemNota(\"\");\r\n    }\r\n    console.log(\"ao mudar nota\", notaSelecionada);\r\n  };\r\n\r\n  const aoMudarAtendimento = (e) => {\r\n    const atendimentoInserido = e.target.value;\r\n    validarPreenchido(atendimentoInserido)\r\n      ? setMensagemAtendimento(\"\")\r\n      : setMensagemAtendimento(\"Preencher atendimento!\");\r\n    setAtendimento(atendimentoInserido);\r\n  };\r\n\r\n  const aoMudarObservacoes = (e) => {\r\n    const observacoesInseridas = e.target.value;\r\n    setObservacoes(observacoesInseridas);\r\n  };\r\n\r\n  const handleAvaliacao = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    // Valida campos obrigatórios\r\n    validarPreenchido(titulo)\r\n      ? setMensagemTitulo(\"\")\r\n      : setMensagemTitulo(\"Preencher título!\");\r\n\r\n    console.log(\"nota\", nota);\r\n\r\n    if (!nota) {\r\n      setMensagemNota(\"Preencher nota!\");\r\n      setLoading(false);\r\n      return;\r\n    } else {\r\n      setMensagemNota(\"\");\r\n    }\r\n\r\n    if (validarIsNaN(nota)) {\r\n      setMensagemNota(\"Preencher nota!\");\r\n      setLoading(false);\r\n      return;\r\n    } else {\r\n      setMensagemNota(\"\");\r\n    }\r\n\r\n    console.log(\"mensagemNota\", mensagemNota);\r\n\r\n    validarPreenchido(atendimento)\r\n      ? setMensagemAtendimento(\"\")\r\n      : setMensagemAtendimento(\"Preencher atendimento!\");\r\n\r\n    if (!mensagemTitulo && !mensagemNota && !mensagemAtendimento) {\r\n      const dados = {\r\n        titulo: titulo,\r\n        nota: nota,\r\n        atendimento: atendimento,\r\n        observacoes: observacoes,\r\n        usuario: usuario,\r\n      };\r\n      dispatch(criar(dados))\r\n        .then((resposta) => {\r\n          console.log(\"mensagem sucesso\", resposta);\r\n          setMensagemBackend(resposta.message);\r\n          setTipoMensagemBackend(\"s\");\r\n        })\r\n        .catch((erro) => {\r\n          console.log(\"mensagem erro\", erro);\r\n          setMensagemBackend(erro);\r\n          setTipoMensagemBackend(\"e\");\r\n        });\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"card\">\r\n        <form onSubmit={handleAvaliacao}>\r\n          <div className=\"form-row\">\r\n            <div className=\"col-md-10\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"titulo\">Título</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"titulo\"\r\n                  value={titulo}\r\n                  onChange={aoMudarTitulo}\r\n                />\r\n\r\n                {mensagemTitulo && (\r\n                  <div className=\"alert alert-danger\" role=\"alert\">\r\n                    {mensagemTitulo}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-md-2\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"titulo\">Nota</label>\r\n                <select\r\n                  onChange={aoMudarNota}\r\n                  value={nota}\r\n                  className=\"custom-select\"\r\n                  id=\"inputNota\"\r\n                >\r\n                  <option defaultValue>Escolha</option>\r\n                  {rangeAvaliacoes}\r\n                </select>\r\n\r\n                {mensagemNota && (\r\n                  <div className=\"alert alert-danger\" role=\"alert\">\r\n                    {mensagemNota}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col\">\r\n              <label htmlFor=\"titulo\">Atendimento</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"atendimento\"\r\n                value={atendimento}\r\n                onChange={aoMudarAtendimento}\r\n              />\r\n\r\n              {mensagemAtendimento && (\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {mensagemAtendimento}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col\">\r\n              <label htmlFor=\"titulo\">Observações</label>\r\n              <textarea\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"observacoes\"\r\n                value={observacoes}\r\n                onChange={aoMudarObservacoes}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col\">\r\n              <button className=\"btn btn-primary btn-block\" disabled={loading}>\r\n                {loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Avaliar</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {mensagemBackend && (\r\n            <div className=\"form-group row\">\r\n              <div className=\"form-group col\">\r\n                <div\r\n                  className={\r\n                    tipoMensagemBackend === \"e\"\r\n                      ? \"alert alert-danger\"\r\n                      : \"alert alert-primary\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {mensagem}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CriarAvaliacao;\r\n","import { SETAR_MENSAGEM } from \"./tipo\";\r\n\r\nimport AvaliacaoService from \"../services/avaliacao.service\";\r\n\r\nexport const criar = (dados) => (dispatch) => {\r\n  return AvaliacaoService.criar(dados).then(\r\n    (resposta) => {\r\n      dispatch({\r\n        type: SETAR_MENSAGEM,\r\n        payload: resposta.message,\r\n      });\r\n\r\n      return Promise.resolve(resposta);\r\n    },\r\n    (error) => {\r\n      const mensagem =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: SETAR_MENSAGEM,\r\n        payload: mensagem,\r\n      });\r\n\r\n      return Promise.reject(mensagem);\r\n    }\r\n  );\r\n};\r\n","import { createBrowserHistory } from \"history\";\r\n\r\nexport const historico = createBrowserHistory();\r\n","// Atualiza o estado de \"estaLogado\" e o usuario da aplicação\r\nimport {\r\n    SUCESSO_REGISTRO,\r\n    FALHA_REGISTRO,\r\n    SUCESSO_LOGIN,\r\n    FALHA_LOGIN,\r\n    LOGOUT,\r\n  } from \"../actions/tipo\";\r\n  \r\n  const usuario = JSON.parse(localStorage.getItem(\"usuario\"));\r\n  \r\n  const initialState = usuario\r\n    ? { estaLogado: true, usuario }\r\n    : { estaLogado: false, usuario: null };\r\n  \r\n  export default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case SUCESSO_REGISTRO:\r\n        return {\r\n          ...state,\r\n          estaLogado: false,\r\n        };\r\n      case FALHA_REGISTRO:\r\n        return {\r\n          ...state,\r\n          estaLogado: false,\r\n        };\r\n      case SUCESSO_LOGIN:\r\n        return {\r\n          ...state,\r\n          estaLogado: true,\r\n          usuario: payload.usuario,\r\n        };\r\n      case FALHA_LOGIN:\r\n        return {\r\n          ...state,\r\n          estaLogado: false,\r\n          usuario: null,\r\n        };\r\n      case LOGOUT:\r\n        return {\r\n          ...state,\r\n          estaLogado: false,\r\n          usuario: null,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","// Atualiza o estado do objeto mensagem quando ela é despachada\r\n// de qualquer lugar da aplicação\r\n\r\nimport { SETAR_MENSAGEM, LIMPAR_MENSAGEM } from \"../actions/tipo\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SETAR_MENSAGEM:\r\n      return { mensagem: payload };\r\n\r\n    case LIMPAR_MENSAGEM:\r\n      return { mensagem: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","// Como somente existe uma store em uma aplicação Redux, tem que\r\n// usar composição para \r\n\r\nimport { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\nimport mensagem from \"./mensagem\";\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  mensagem,\r\n});\r\n","import React, { useState, useEffect } from \"react\";\nimport { Provider, useDispatch, useSelector } from \"react-redux\";\nimport { Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport Login from \"./components/Login\";\nimport Registrar from \"./components/Registrar\";\nimport Home from \"./components/Home\";\nimport Perfil from \"./components/Perfil\";\nimport TelaUsuario from \"./components/telas/TelaUsuario\";\nimport TelaMod from \"./components/telas/TelaMod\";\nimport TelaAdmin from \"./components/telas/TelaAdmin\";\nimport RecuperarSenha from \"./components/RecuperarSenha\";\nimport CadastrarInstalacao from \"./components/instalacoes/CadastrarInstalacao\";\nimport ListarInstalacao from \"./components/instalacoes/ListarInstalacao\";\nimport ListarFatura from \"./components/faturas/ListarFatura\";\n\nimport ListarAvaliacao from \"./components/avaliacoes/ListarAvaliacao\";\nimport CriarAvaliacao from \"./components/avaliacoes/CriarAvaliacao\";\n\nimport { logout } from \"./actions/auth\";\nimport { limparMensagem } from \"./actions/mensagem\";\n\nimport { historico } from \"./helpers/historico\";\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\n\nconst AppWrapper = () => {\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\n  return (\n    <Provider store={store}>\n      <App />\n    </Provider>\n  )\n}\n\nconst App = () => {\n  const [mostrarTelaMod, setMostrarTelaMod] = useState(false);\n  const [mostrarTelaAdmin, setMostrarTelaAdmin] = useState(false);\n\n  const { usuario: usuarioAtual } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    historico.listen((location) => {\n      dispatch(limparMensagem()); // Limpa mensagem quando trocar localização\n    });\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (usuarioAtual) {\n      setMostrarTelaMod(usuarioAtual.cargos.includes(\"CARGO_MODERADOR\"));\n      setMostrarTelaAdmin(usuarioAtual.cargos.includes(\"CARGO_ADMIN\"));\n    }\n  }, [usuarioAtual]);\n\n  const logOut = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <Router history={historico}>\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <Link to={\"/\"} className=\"navbar-brand\">\n            WaterStuff\n          </Link>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/home\"} className=\"nav-link\">\n                Home\n              </Link>\n            </li>\n\n            {mostrarTelaMod && (\n              <li className=\"nav-item\">\n                <Link to={\"/mod\"} className=\"nav-link\">\n                  Moderação\n                </Link>\n              </li>\n            )}\n\n            {mostrarTelaAdmin && (\n              <li className=\"nav-item\">\n                <Link to={\"/admin\"} className=\"nav-link\">\n                  Administração\n                </Link>\n              </li>\n            )}\n\n            {usuarioAtual && (\n              <li className=\"nav-item\">\n                <Link to={\"/usuario\"} className=\"nav-link\">\n                  Seus serviços\n                </Link>\n              </li>\n            )}\n          </div>\n\n          {usuarioAtual ? (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/perfil\"} className=\"nav-link\">\n                  {usuarioAtual.email}\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <a href=\"/login\" className=\"nav-link\" onClick={logOut}>\n                  LogOut\n                </a>\n              </li>\n            </div>\n          ) : (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/login\"} className=\"nav-link\">\n                  Login\n                </Link>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link to={\"/registrar\"} className=\"nav-link\">\n                  Registrar\n                </Link>\n              </li>\n            </div>\n          )}\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/home\"]} component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/registrar\" component={Registrar} />\n            <Route exact path=\"/perfil\" component={Perfil} />\n            <Route exact path=\"/recuperar/senha\" component={RecuperarSenha} />\n            <Route exact path=\"/instalacao/cadastro\" component={CadastrarInstalacao} />\n            <Route exact path=\"/instalacao/listar\" component={ListarInstalacao} />\n            <Route exact path=\"/fatura/listar\" component={ListarFatura} />\n            <Route exact path=\"/avaliacao/listar\" component={ListarAvaliacao} />\n            <Route exact path=\"/avaliacao/criar\" component={CriarAvaliacao} />\n            <Route path=\"/usuario\" component={TelaUsuario} />\n            <Route path=\"/mod\" component={TelaMod} />\n            <Route path=\"/admin\" component={TelaAdmin} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default AppWrapper;\n","import { SETAR_MENSAGEM, LIMPAR_MENSAGEM } from \"./tipo\";\r\n\r\nexport const setarMensagem = (mensagem) => ({\r\n  type: SETAR_MENSAGEM,\r\n  payload: mensagem,\r\n});\r\n\r\nexport const limparMensagem = () => ({\r\n  type: LIMPAR_MENSAGEM,\r\n});\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}